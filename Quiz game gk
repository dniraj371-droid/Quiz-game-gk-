import os, zipfile

# Project folder
folder = "gk_quiz_game"
os.makedirs(folder, exist_ok=True)

# index.html
index_html = """<!DOCTYPE html>
<html lang="hi">
<head>
  <meta charset="UTF-8">
  <title>‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡§æ GK Quiz Game</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h1>‡§¨‡§ö‡•ç‡§ö‡•ã‡§Ç ‡§ï‡§æ GK Quiz Game üéâ</h1>
  <div class="quiz-box">
    <p id="question"></p>
    <div id="options"></div>
    <p id="timer"></p>
    <p id="result"></p>
  </div>

  <!-- Sounds -->
  <audio id="correctSound" src="sounds/correct.ogg"></audio>
  <audio id="wrongSound" src="sounds/wrong.ogg"></audio>

  <script src="script.js"></script>
</body>
</html>"""
with open(f"{folder}/index.html", "w", encoding="utf-8") as f:
    f.write(index_html)

# style.css
style_css = """body {
  font-family: Arial, sans-serif;
  background: #f0f8ff;
  text-align: center;
  padding: 30px;
}
.quiz-box {
  background: #fffacd;
  border: 2px solid #f7d774;
  border-radius: 15px;
  padding: 20px;
  max-width: 500px;
  margin: auto;
}
button {
  display: block;
  margin: 10px auto;
  padding: 12px;
  width: 80%;
  border: none;
  border-radius: 10px;
  background: #87cefa;
  cursor: pointer;
  font-size: 16px;
}
button:hover { background: #4682b4; color: white; }
.correct { background: #28a745 !important; color: white; }
.wrong { background: #dc3545 !important; color: white; }
#result { font-weight: bold; margin-top: 15px; font-size: 18px; }
#timer { font-size: 20px; font-weight: bold; color: #d9534f; }"""
with open(f"{folder}/style.css", "w", encoding="utf-8") as f:
    f.write(style_css)

# script.js
script_js = """const quiz = [
  { question: "‡§≠‡§æ‡§∞‡§§ ‡§ï‡•Ä ‡§∞‡§æ‡§ú‡§ß‡§æ‡§®‡•Ä ‡§ï‡•å‡§® ‡§∏‡•Ä ‡§π‡•à?", options: ["‡§Æ‡•Å‡§Ç‡§¨‡§à","‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä","‡§ï‡•ã‡§≤‡§ï‡§æ‡§§‡§æ","‡§ö‡•á‡§®‡•ç‡§®‡§à"], answer: "‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä" },
  { question: "‡§∏‡•å‡§∞ ‡§Æ‡§Ç‡§°‡§≤ ‡§ï‡§æ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§ó‡•ç‡§∞‡§π ‡§ï‡•å‡§® ‡§∏‡§æ ‡§π‡•à?", options: ["‡§™‡•É‡§•‡•ç‡§µ‡•Ä","‡§Æ‡§Ç‡§ó‡§≤","‡§¨‡•É‡§π‡§∏‡•ç‡§™‡§§‡§ø","‡§∂‡•Å‡§ï‡•ç‡§∞"], answer: "‡§¨‡•É‡§π‡§∏‡•ç‡§™‡§§‡§ø" },
  { question: "‡§á‡§Ç‡§¶‡•ç‡§∞‡§ß‡§®‡•Å‡§∑ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§§‡§®‡•á ‡§∞‡§Ç‡§ó ‡§π‡•ã‡§§‡•á ‡§π‡•à‡§Ç?", options: ["5","6","7","8"], answer: "7" },
  { question: "‡§™‡•É‡§•‡•ç‡§µ‡•Ä ‡§™‡§∞ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§ú‡§æ‡§®‡§µ‡§∞ ‡§ï‡•å‡§® ‡§π‡•à?", options: ["‡§π‡§æ‡§•‡•Ä","‡§®‡•Ä‡§≤‡•Ä ‡§µ‡•ç‡§π‡•á‡§≤","‡§ú‡§ø‡§∞‡§æ‡§´‡§º","‡§∂‡§æ‡§∞‡•ç‡§ï"], answer: "‡§®‡•Ä‡§≤‡•Ä ‡§µ‡•ç‡§π‡•á‡§≤" },
  { question: "‡§≠‡§æ‡§∞‡§§ ‡§ï‡•á ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡§™‡§ø‡§§‡§æ ‡§ï‡•å‡§® ‡§ï‡§π‡§≤‡§æ‡§§‡•á ‡§π‡•à‡§Ç?", options: ["‡§≠‡§ó‡§§ ‡§∏‡§ø‡§Ç‡§π","‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä","‡§®‡•á‡§π‡§∞‡•Ç‡§ú‡•Ä","‡§∏‡•Å‡§≠‡§æ‡§∑ ‡§ö‡§Ç‡§¶‡•ç‡§∞ ‡§¨‡•ã‡§∏"], answer: "‡§Æ‡§π‡§æ‡§§‡•ç‡§Æ‡§æ ‡§ó‡§æ‡§Ç‡§ß‡•Ä" }
];

let current = 0, score = 0, timeLeft = 10, timer;

function loadQuestion() {
  clearInterval(timer);
  timeLeft = 10;
  document.getElementById("result").innerHTML = "";
  document.getElementById("timer").textContent = "‚è∞ ‡§∏‡§Æ‡§Ø: " + timeLeft + " ‡§∏‡•á‡§ï‡§Ç‡§°";
  const q = quiz[current];
  document.getElementById("question").textContent = q.question;
  const optionsDiv = document.getElementById("options");
  optionsDiv.innerHTML = "";
  q.options.forEach(option => {
    const btn = document.createElement("button");
    btn.textContent = option;
    btn.onclick = () => checkAnswer(btn, option);
    optionsDiv.appendChild(btn);
  });
  timer = setInterval(() => {
    timeLeft--;
    document.getElementById("timer").textContent = "‚è∞ ‡§∏‡§Æ‡§Ø: " + timeLeft + " ‡§∏‡•á‡§ï‡§Ç‡§°";
    if (timeLeft <= 0) {
      clearInterval(timer);
      document.getElementById("result").textContent = "‚è≥ ‡§∏‡§Æ‡§Ø ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§!";
      document.getElementById("wrongSound").play();
      highlightCorrect();
      disableButtons();
      setTimeout(nextQuestion, 2000);
    }
  }, 1000);
}

function checkAnswer(button, answer) {
  clearInterval(timer);
  if (answer === quiz[current].answer) {
    document.getElementById("result").textContent = "‚úÖ ‡§∏‡§π‡•Ä ‡§ú‡§µ‡§æ‡§¨!";
    document.getElementById("correctSound").play();
    button.classList.add("correct");
    score++;
  } else {
    document.getElementById("result").textContent = "‚ùå ‡§ó‡§≤‡§§ ‡§ú‡§µ‡§æ‡§¨!";
    document.getElementById("wrongSound").play();
    button.classList.add("wrong");
    highlightCorrect();
  }
  disableButtons();
  setTimeout(nextQuestion, 2000);
}

function highlightCorrect() {
  document.querySelectorAll("#options button").forEach(btn => {
    if (btn.textContent === quiz[current].answer) btn.classList.add("correct");
  });
}
function disableButtons() {
  document.querySelectorAll("#options button").forEach(btn => btn.disabled = true);
}
function nextQuestion() {
  current++;
  if (current < quiz.length) loadQuestion();
  else endGame();
}
function endGame() {
  document.getElementById("question").textContent = "üéä ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§!";
  document.getElementById("options").innerHTML = "";
  document.getElementById("timer").textContent = "";
  document.getElementById("result").textContent = "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: " + score + "/" + quiz.length;
} 
loadQuestion();"""
with open(f"{folder}/script.js", "w", encoding="utf-8") as f:
    f.write(script_js)

# sounds folder
os.makedirs(f"{folder}/sounds", exist_ok=True)

# (Dummy empty sounds, ‡§Ü‡§™ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§Ö‡§∏‡§≤‡•Ä .ogg ‡§°‡§æ‡§≤ ‡§∏‡§ï‡§§‡•á ‡§π‡•ã)
open(f"{folder}/sounds/correct.ogg", "wb").close()
open(f"{folder}/sounds/wrong.ogg", "wb").close()

# ZIP file ‡§¨‡§®‡§æ‡§ì
zip_name = "gk_quiz_game.zip"
with zipfile.ZipFile(zip_name, "w") as z:
    for root, dirs, files in os.walk(folder):
        for file in files:
            filepath = os.path.join(root, file)
            z.write(filepath, os.path.relpath(filepath, folder))

print(f"‚úÖ ZIP file ready: {zip_name}")





